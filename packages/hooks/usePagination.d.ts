import type { PaginationProps } from 'element-plus';
import { type TService, type IOptions } from './useRequset';
interface IPagination {
    totalKey: string;
    pageSizeKey: string;
    currentPageKey: string;
}
export type TPageProps = Partial<IPagination> & Partial<PaginationProps>;
export declare function usePagination(service: TService, options: IOptions): {
    pageProps: import("vue").Ref<{
        totalKey?: string;
        pageSizeKey?: string;
        currentPageKey?: string;
        small?: boolean;
        disabled?: boolean;
        layout: string;
        background: boolean;
        popperClass?: string;
        teleported?: boolean;
        pagerCount?: number;
        pageSizes?: number[];
        prevText?: string;
        nextText?: string;
        hideOnSinglePage: boolean;
        size?: "" | "default" | "small" | "large";
        currentPage?: number;
        pageCount?: number;
        total?: number;
        pageSize?: number;
        defaultPageSize?: number;
        defaultCurrentPage?: number;
        prevIcon?: any;
        nextIcon?: any;
        appendSizeTo?: string;
    }, {
        totalKey?: string;
        pageSizeKey?: string;
        currentPageKey?: string;
        small?: boolean;
        disabled?: boolean;
        layout: string;
        background: boolean;
        popperClass?: string;
        teleported?: boolean;
        pagerCount?: number;
        pageSizes?: number[];
        prevText?: string;
        nextText?: string;
        hideOnSinglePage: boolean;
        size?: "" | "default" | "small" | "large";
        currentPage?: number;
        pageCount?: number;
        total?: number;
        pageSize?: number;
        defaultPageSize?: number;
        defaultCurrentPage?: number;
        prevIcon?: any;
        nextIcon?: any;
        appendSizeTo?: string;
    } | {
        totalKey?: string;
        pageSizeKey?: string;
        currentPageKey?: string;
        small?: boolean;
        disabled?: boolean;
        layout: string;
        background: boolean;
        popperClass?: string;
        teleported?: boolean;
        pagerCount?: number;
        pageSizes?: number[];
        prevText?: string;
        nextText?: string;
        hideOnSinglePage: boolean;
        size?: "" | "default" | "small" | "large";
        currentPage?: number;
        pageCount?: number;
        total?: number;
        pageSize?: number;
        defaultPageSize?: number;
        defaultCurrentPage?: number;
        prevIcon?: any;
        nextIcon?: any;
        appendSizeTo?: string;
    }>;
    loading: import("vue").Ref<boolean, boolean>;
    params: import("vue").Ref<any, any>;
    currentPage: import("vue").Ref<any, any>;
    pageSize: import("vue").Ref<any, any>;
    data: import("vue").Ref<any, any>;
    run: () => void;
};
export {};
